@model AppointmentViewModel
@{
    ViewData["Title"] = "Randevu Al";
    var today = DateTime.Now;
    var currentMonth = today.ToString("MMMM yyyy", new System.Globalization.CultureInfo("tr-TR"));
}

<div class="container py-5">
    <!-- Başlık -->
    <div class="row mb-4">
        <div class="col-12 text-center">
            <h2 class="fw-bold text-primary">Online Randevu Oluştur</h2>
            <p class="text-muted">Aşağıdaki adımları takip ederek kolayca randevu alabilirsiniz</p>
        </div>
    </div>
    
    <div class="row g-4">
        <!-- Sol Taraf - Doktor Bilgileri -->
        <div class="col-lg-4">
            <div class="card border-0 shadow-lg rounded-4 h-100">
                <div class="card-body p-4">
                    <div class="text-center mb-4">
                        <div class="position-relative d-inline-block mb-3">
                            <img src="@(Model.Doctor?.ImageUrl)" alt="@(Model.Doctor?.Name)" 
                                class="rounded-circle border border-4 border-light shadow" 
                                style="width: 140px; height: 140px; object-fit: cover;">
                            <span class="position-absolute bottom-0 end-0 bg-success text-white rounded-circle p-2 border border-3 border-white">
                                <i class="fas fa-check-circle"></i>
                            </span>
                        </div>
                        <h3 class="fw-bold mb-1">@(Model.Doctor?.Name)</h3>
                        <span class="badge bg-primary rounded-pill px-3 py-2 mb-3">@(Model.Doctor?.Specialty)</span>
                        
                        @if (!string.IsNullOrEmpty(Model.Doctor?.Description))
                        {
                            <p class="text-muted mb-0">@(Model.Doctor?.Description)</p>
                        }
                    </div>
                    
                    <hr class="my-4">
                    
                    <h5 class="fw-bold mb-3"><i class="fas fa-clock text-primary me-2"></i>Çalışma Saatleri</h5>
                    <div class="card bg-light border-0 rounded-3 mb-3">
                        <div class="card-body py-3 px-4">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <i class="fas fa-check-circle text-success me-2"></i>
                                    <span class="fw-medium">Pazartesi - Cuma</span>
                                </div>
                                <span class="badge bg-primary rounded-pill px-3">09:00 - 17:00</span>
                            </div>
                        </div>
                    </div>
                    <div class="card bg-light border-0 rounded-3">
                        <div class="card-body py-3 px-4">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <i class="fas fa-times-circle text-danger me-2"></i>
                                    <span class="fw-medium">Cumartesi - Pazar</span>
                                </div>
                                <span class="badge bg-danger rounded-pill px-3">Kapalı</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sağ Taraf - Randevu Formu -->
        <div class="col-lg-8">
            <div class="card border-0 shadow-lg rounded-4">
                <div class="card-body p-4">
                    <!-- İlerleme Çubuğu -->
                    <div class="mb-5">
                        <div class="d-flex justify-content-between mb-2">
                            <span class="badge bg-primary rounded-pill px-3 py-2">
                                <i class="fas fa-calendar-alt me-2"></i>Randevu Bilgileri
                            </span>
                            <span class="text-muted small">* Zorunlu alanlar</span>
                        </div>
                        <div class="progress" style="height: 5px;">
                            <div class="progress-bar bg-primary" role="progressbar" style="width: 100%"></div>
                        </div>
                    </div>
                    
                    <form asp-action="Create" method="post" id="appointmentForm" class="needs-validation" novalidate>
                        <input type="hidden" asp-for="Appointment.DoctorId" value="@(Model.Doctor?.Id)" />
                        <input type="hidden" name="Appointment.AppointmentDateTime" id="selectedDateTime" />
                        <input type="hidden" name="Doctor.Id" value="@(Model.Doctor?.Id)" />
                        <input type="hidden" name="Doctor.Name" value="@(Model.Doctor?.Name)" />
                        <input type="hidden" name="Doctor.Specialty" value="@(Model.Doctor?.Specialty)" />
                        <input type="hidden" name="Appointment.PatientId" value="@Context.Session.GetInt32("PatientId")" />
                        <input type="hidden" name="Email" value="@(Context.Session.GetString("UserEmail") ?? "user@example.com")" />
                        <input type="hidden" name="Password" value="placeholder" />

                        <!-- Takvim -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">
                                <i class="fas fa-calendar-day text-primary me-2"></i>Randevu Tarihi <span class="text-danger">*</span>
                            </label>
                            
                            <div class="alert alert-warning border-0 rounded-3 mb-3" role="alert">
                                <div class="d-flex">
                                    <div class="me-3">
                                        <i class="fas fa-exclamation-triangle fs-4 text-warning"></i>
                                    </div>
                                    <div>
                                        <h6 class="alert-heading fw-bold mb-1">Önemli Bilgilendirme</h6>
                                        <p class="mb-0 small">Hafta sonları (Cumartesi-Pazar) randevu hizmeti verilmemektedir.</p>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="simple-calendar bg-white border rounded-3 p-3 shadow-sm">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <button type="button" class="btn btn-sm btn-outline-secondary rounded-pill px-3" id="prevMonth">
                                        <i class="fas fa-chevron-left me-1"></i> Önceki
                                    </button>
                                    <h6 class="mb-0 fw-bold text-primary" id="currentMonthYear">@currentMonth</h6>
                                    <button type="button" class="btn btn-sm btn-outline-secondary rounded-pill px-3" id="nextMonth">
                                        Sonraki <i class="fas fa-chevron-right ms-1"></i>
                                    </button>
                                </div>
                                <table class="table table-calendar mb-0">
                                    <thead>
                                        <tr>
                                            <th>Pt</th>
                                            <th>Sa</th>
                                            <th>Ça</th>
                                            <th>Pe</th>
                                            <th>Cu</th>
                                            <th class="weekend-header" title="Hafta sonu randevu alınamaz">Ct</th>
                                            <th class="weekend-header" title="Hafta sonu randevu alınamaz">Pa</th>
                                        </tr>
                                    </thead>
                                    <tbody id="calendarDays"></tbody>
                                </table>
                            </div>
                        </div>
                        
                        <!-- Saat Seçimi -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">
                                <i class="fas fa-clock text-primary me-2"></i>Randevu Saati <span class="text-danger">*</span>
                            </label>
                            <div class="time-slots d-flex flex-wrap gap-2" id="timeSlots"></div>
                        </div>
                        
                        <div class="d-grid gap-2 mt-4">
                            <button type="button" class="btn btn-primary btn-lg rounded-pill py-3" id="showConfirmModal" disabled>
                                <i class="fas fa-calendar-check me-2"></i>Randevu Oluştur
                            </button>
                            <a href="/Appointment/Doctors" class="btn btn-outline-secondary rounded-pill">
                                <i class="fas fa-arrow-left me-2"></i>Doktor Seçimine Geri Dön
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Randevu Onay Modalı -->
<div class="modal fade" id="appointmentConfirmModal" tabindex="-1" aria-labelledby="appointmentConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="appointmentConfirmModalLabel">Randevu Onayı</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-4">
                    <i class="fas fa-calendar-check text-primary" style="font-size: 3rem;"></i>
                </div>
                <h4 class="text-center mb-4">Randevu Bilgilerinizi Onaylayın</h4>
                
                <div class="appointment-details">
                    <div class="row mb-3">
                        <div class="col-4 text-muted">Doktor:</div>
                        <div class="col-8 fw-bold" id="confirmDoctorName">@(Model.Doctor?.Name)</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-4 text-muted">Bölüm:</div>
                        <div class="col-8" id="confirmDoctorSpecialty">@(Model.Doctor?.Specialty)</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-4 text-muted">Tarih:</div>
                        <div class="col-8" id="confirmDate"></div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-4 text-muted">Saat:</div>
                        <div class="col-8" id="confirmTime"></div>
                    </div>
                </div>
                
                <div class="alert alert-info mt-3">
                    <i class="fas fa-info-circle me-2"></i>
                    Randevunuzu onayladıktan sonra, randevu detayları e-posta adresinize gönderilecektir.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" id="confirmAppointmentBtn">
                    <i class="fas fa-check me-2"></i>Randevuyu Onayla
                </button>
            </div>
        </div>
    </div>
</div>

<style>
.table-calendar {
    table-layout: fixed;
}

.table-calendar th {
    text-align: center;
    font-weight: 600;
    color: #495057;
    font-size: 14px;
    padding: 8px;
}

.table-calendar td {
    padding: 6px;
    text-align: center;
    vertical-align: middle;
    height: 46px;
}

.calendar-day {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 38px;
    height: 38px;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s;
    font-size: 14px;
    font-weight: 500;
}

.calendar-day:not(.disabled):hover {
    background-color: #e9ecef;
    transform: scale(1.1);
}

.calendar-day.selected {
    background-color: var(--bs-primary);
    color: white;
    box-shadow: 0 3px 6px rgba(0,123,255,0.3);
    transform: scale(1.1);
}

.calendar-day.disabled {
    color: #adb5bd;
    cursor: not-allowed;
}

.closed-time-slot {
    background-color: #f8d7da;
    color: #842029;
    border-radius: 8px;
    padding: 8px 10px;
    text-align: center;
    margin: 0 auto;
    display: inline-block;
    font-size: 13px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    cursor: not-allowed;
    width: 100%;
    border: 1px solid #f5c2c7;
}

.calendar-day.today {
    border: 2px solid var(--bs-primary);
    font-weight: bold;
}

.time-slot {
    padding: 10px 16px;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s;
    font-size: 14px;
    width: calc(25% - 8px);
    text-align: center;
    font-weight: 500;
    background-color: #f8f9fa;
    margin-bottom: 8px;
}

.time-slot:not(.disabled):hover {
    border-color: var(--bs-primary);
    background-color: #e9ecef;
    transform: translateY(-2px);
    box-shadow: 0 3px 6px rgba(0,0,0,0.1);
}

.time-slot.selected {
    background-color: var(--bs-primary);
    color: white;
    border-color: var(--bs-primary);
    box-shadow: 0 3px 6px rgba(0,123,255,0.3);
    transform: translateY(-2px);
}

.time-slot.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background-color: #f8f9fa;
}

.weekend-header {
    background-color: #f8d7da;
    color: #842029;
    font-weight: bold;
    position: relative;
    border-radius: 4px;
}

@@media (max-width: 767.98px) {
    .time-slot {
        width: calc(33.333% - 8px);
    }
}

@@media (max-width: 575.98px) {
    .time-slot {
        width: calc(50% - 8px);
    }
}
</style>

@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function() {
    let currentDate = new Date();
    let selectedDate = null;
    let selectedTime = null;
    const showConfirmModal = document.getElementById('showConfirmModal');
    const calendarDays = document.getElementById('calendarDays');
    const timeSlots = document.getElementById('timeSlots');
    const currentMonthYear = document.getElementById('currentMonthYear');
    const selectedDateTime = document.getElementById('selectedDateTime');
    const appointmentForm = document.getElementById('appointmentForm');
    let appointmentConfirmModal = null;

    // Modal Oluştur
    appointmentConfirmModal = new bootstrap.Modal(document.getElementById('appointmentConfirmModal'));
    
    // Onay butonuna tıklama
    document.getElementById('confirmAppointmentBtn').addEventListener('click', function() {
        submitAppointment();
    });
    
    // Randevu oluştur butonuna tıklama
    showConfirmModal.addEventListener('click', function() {
        if (!selectedDate || !selectedTime) {
            alert('Lütfen tarih ve saat seçiniz.');
            return;
        }
        
        // Modal içeriğini doldur
        const formattedDate = selectedDate.toLocaleDateString('tr-TR', {
            weekday: 'long',
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
        
        document.getElementById('confirmDate').textContent = formattedDate;
        document.getElementById('confirmTime').textContent = selectedTime;
        
        // Modal'ı göster
        appointmentConfirmModal.show();
    });

    function submitAppointment() {
        if (!selectedDate || !selectedTime) {
            alert('Lütfen tarih ve saat seçiniz.');
            return;
        }

        // Seçilen tarih ve saati birleştir
        const [hours, minutes] = selectedTime.split(':');
        
        // UTC dönüşümü olmadan, doğrudan tarih ve saat bilgisini string olarak oluştur
        const year = selectedDate.getFullYear();
        const month = String(selectedDate.getMonth() + 1).padStart(2, '0');
        const day = String(selectedDate.getDate()).padStart(2, '0');
        
        // ISO formatında string olarak tarih ve saati birleştir, UTC dönüşümü yapmadan
        const appointmentDateStr = `${year}-${month}-${day}T${hours}:${minutes}:00`;
        
        // Hidden input'a değeri set et
        selectedDateTime.value = appointmentDateStr;
        
        console.log(`Randevu alınacak tarih: ${appointmentDateStr} (UTC dönüşümü yapılmadan)`);

        // Modal'ı kapat
        appointmentConfirmModal.hide();
        
        // Form gönderimi
        appointmentForm.submit();
    }

    function updateCalendar() {
        const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
        const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
        const startingDay = (firstDay.getDay() + 6) % 7; // Pazartesi = 0
        
        currentMonthYear.textContent = currentDate.toLocaleString('tr-TR', { month: 'long', year: 'numeric' });
        calendarDays.innerHTML = '';

        let currentRow = document.createElement('tr');
                
        // Önceki ayın günleri
        for (let i = 0; i < startingDay; i++) {
            const prevDate = new Date(firstDay);
            prevDate.setDate(prevDate.getDate() - (startingDay - i));
            const td = createDayCell(prevDate, true);
            currentRow.appendChild(td);
        }

        // Bu ayın günleri
        for (let i = 1; i <= lastDay.getDate(); i++) {
            if ((i + startingDay - 1) % 7 === 0 && i !== 1) {
                calendarDays.appendChild(currentRow);
                currentRow = document.createElement('tr');
            }

            const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), i);
            const td = createDayCell(date);
            currentRow.appendChild(td);
        }

        // Sonraki ayın günleri
        const remainingCells = 7 - currentRow.children.length;
        if (remainingCells < 7) {
            for (let i = 1; i <= remainingCells; i++) {
                const nextDate = new Date(lastDay);
                nextDate.setDate(nextDate.getDate() + i);
                const td = createDayCell(nextDate, true);
                currentRow.appendChild(td);
            }
        }

        calendarDays.appendChild(currentRow);
    }

    function createDayCell(date, isOtherMonth = false) {
        const td = document.createElement('td');
        
        const isWeekend = date.getDay() === 0 || date.getDay() === 6;
        const isPast = date < new Date().setHours(0,0,0,0);
        const isToday = date.toDateString() === new Date().toDateString();
        const isSelected = selectedDate?.toDateString() === date.toDateString();

        if (isOtherMonth || isPast) {
            // Önceki/sonraki ay veya geçmiş tarihler
            const dayDiv = document.createElement('div');
            dayDiv.className = 'calendar-day';
            dayDiv.textContent = date.getDate();
            dayDiv.classList.add('disabled');
            td.appendChild(dayDiv);
        } else if (isWeekend) {
            // Hafta sonu günleri için özel stil
            const weekendBtn = document.createElement('div');
            weekendBtn.className = 'closed-time-slot';
            
            // Kapalı olduğunu belirten gösterge
            weekendBtn.innerHTML = `<i class="fas fa-times-circle"></i> Kapalı`;
            
            weekendBtn.title = "Hafta sonları randevu alınamaz";
            td.appendChild(weekendBtn);
        } else {
            // Normal günler
            const dayDiv = document.createElement('div');
            dayDiv.className = 'calendar-day';
            dayDiv.textContent = date.getDate();
            dayDiv.addEventListener('click', () => selectDate(date));

        if (isToday) dayDiv.classList.add('today');
        if (isSelected) dayDiv.classList.add('selected');

        td.appendChild(dayDiv);
        }

        return td;
    }

    function selectDate(date) {
        selectedDate = date;
        selectedTime = null;
        document.querySelectorAll('.calendar-day').forEach(day => day.classList.remove('selected'));
        document.querySelectorAll('.calendar-day').forEach(day => {
            if (parseInt(day.textContent) === date.getDate() && !day.classList.contains('disabled')) {
                day.classList.add('selected');
            }
        });
        updateTimeSlots();
        checkFormValidity();
    }

    function updateTimeSlots() {
        if (!selectedDate) return;

        timeSlots.innerHTML = '<div class="d-flex justify-content-center w-100 my-3"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Yükleniyor...</span></div></div>';

        const doctorId = document.querySelector('input[name="Appointment.DoctorId"]').value;
        
        // Tarih için UTC dönüşümü yapmadan direkt string olarak gönder
        const year = selectedDate.getFullYear();
        const month = String(selectedDate.getMonth() + 1).padStart(2, '0');
        const day = String(selectedDate.getDate()).padStart(2, '0');
        const dateStr = `${year}-${month}-${day}`;
        
        fetch(`/Appointment/GetAvailableSlots?doctorId=${doctorId}&date=${dateStr}`)
            .then(response => response.json())
            .then(data => {
                timeSlots.innerHTML = '';
                
                data.forEach(slot => {
                    const slotDiv = document.createElement('div');
                    slotDiv.className = `time-slot ${!slot.available ? 'disabled' : ''}`;
                    slotDiv.innerHTML = `<i class="far fa-clock me-2"></i>${slot.time}`;
                    
                    if (slot.available) {
                        slotDiv.addEventListener('click', () => selectTime(slot.time, slotDiv));
                    }
                    
                    if (selectedTime === slot.time) {
                        slotDiv.classList.add('selected');
                    }
                    
                    timeSlots.appendChild(slotDiv);
            });
            })
            .catch(error => {
                console.error('Saat bilgileri alınırken hata oluştu:', error);
                timeSlots.innerHTML = '<div class="alert alert-danger w-100">Saat bilgileri alınırken bir hata oluştu. Lütfen tekrar deneyin.</div>';
            });
    }

    function selectTime(time, element) {
        selectedTime = time;
        document.querySelectorAll('.time-slot').forEach(slot => slot.classList.remove('selected'));
        element.classList.add('selected');
        checkFormValidity();
    }

    function checkFormValidity() {
        if (selectedDate && selectedTime) {
            showConfirmModal.disabled = false;
            showConfirmModal.classList.add('btn-pulse');
        } else {
            showConfirmModal.disabled = true;
            showConfirmModal.classList.remove('btn-pulse');
        }
    }

    // Ay değiştirme butonları
    document.getElementById('prevMonth').addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() - 1);
        updateCalendar();
    });
            
    document.getElementById('nextMonth').addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() + 1);
        updateCalendar();
    });

    // Başlangıçta takvimi göster
    updateCalendar();
    });
</script>
}